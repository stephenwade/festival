---
name: E2E tests

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: macos-14
    steps:
      # https://github.com/actions/runner-images/issues/9330
      - name: Allow microphone access to all apps
        run: |
          sqlite3 $HOME/Library/Application\ Support/com.apple.TCC/TCC.db "INSERT OR IGNORE INTO access VALUES ('kTCCServiceMicrophone','/usr/local/opt/runner/provisioner/provisioner',1,2,4,1,NULL,NULL,0,'UNUSED',NULL,0,1687786159,NULL,NULL,'UNUSED',1687786159);"

      - name: Check out repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Install MySQL
        run: |
          brew install mysql
          brew services start mysql

      - name: Set up Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          node-version: 20
          cache: npm

      - run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run tests
        run: npm run test
        env:
          AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
          AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
          AZURE_STORAGE_WEBSITE_DOMAIN: ${{ secrets.AZURE_STORAGE_WEBSITE_DOMAIN }}
          CLERK_PUBLISHABLE_KEY: ${{ secrets.CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
          DATABASE_URL: mysql://root:@localhost:3306/festival
          FIRST_ADMIN_EMAIL_ADDRESS: ci@urlfest.com
          PORT: '3000'

      - name: Upload test results
        uses: actions/upload-artifact@1746f4ab65b179e0ea60a494b83293b640dd5bba # v4
        if: always()
        with:
          name: test-results
          path: test-results/

  test-success:
    needs: [test]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Check for failure
        if: needs.test.result == 'failure' || needs.test.result == 'cancelled'
        run: exit 1
