---
name: E2E tests

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: macos-14
    steps:
      # https://github.com/actions/runner-images/issues/9330
      - name: Allow microphone access to all apps
        run: |
          sqlite3 $HOME/Library/Application\ Support/com.apple.TCC/TCC.db "INSERT OR IGNORE INTO access VALUES ('kTCCServiceMicrophone','/usr/local/opt/runner/provisioner/provisioner',1,2,4,1,NULL,NULL,0,'UNUSED',NULL,0,1687786159,NULL,NULL,'UNUSED',1687786159);"

      - name: Install PostgreSQL
        run: |
          brew install postgresql@16
          brew services start postgresql@16

      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Set up Node.js
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4
        with:
          node-version: 20
          cache: npm

      - run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run tests
        run: npm run test
        env:
          CLERK_PUBLISHABLE_KEY: ${{ secrets.CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
          DATABASE_URL: postgresql://runner:@localhost:5432/postgres
          FIRST_ADMIN_EMAIL_ADDRESS: ci@urlfest.com
          PORT: '3000'
          TIGRIS_ACCESS_KEY_ID: ${{ secrets.TIGRIS_ACCESS_KEY_ID }}
          TIGRIS_BUCKET: festival-ci
          TIGRIS_SECRET_ACCESS_KEY: ${{ secrets.TIGRIS_SECRET_ACCESS_KEY }}

      - name: Upload test results
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4
        if: always()
        with:
          # name: test-results-${{ matrix.os }}--attempt-${{ github.run_attempt }}
          name: test-results--attempt-${{ github.run_attempt }}
          path: test-results/

  test-success:
    needs: [test]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Check for failure
        if: needs.test.result == 'failure' || needs.test.result == 'cancelled'
        run: exit 1
